---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="h-full">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Boardify - The Ultimate Task Management Mini App for Telegram" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
		<link rel="icon" type="image/svg+xml" href="/logo.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<!-- The official Telegram Web App script -->
		<script src="https://telegram.org/js/telegram-web-app.js"></script>
	</head>
	<body class="h-full bg-secondary text-foreground antialiased">
		<div id="app" class="min-h-full flex flex-col">
			<slot />
		</div>
		<script>
			// This script runs on the client to initialize the theme
			// and expand the app to fill the screen.
			document.addEventListener('DOMContentLoaded', () => {
				const tg = window.Telegram.WebApp;
				
				// Expand the app to take up the full screen
				tg.expand();

				// Set color scheme based on Telegram theme
				if (tg.colorScheme === 'dark') {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}

				// Optional: Listen for theme changes from Telegram
				tg.onEvent('themeChanged', function() {
					if (tg.colorScheme === 'dark') {
						document.documentElement.classList.add('dark');
					} else {
						document.documentElement.classList.remove('dark');
					}
				});
			});
		</script>
	</body>
</html>